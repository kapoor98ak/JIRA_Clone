Resources:

  RDSSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: MyRDSCredentials-1
      Description: RDS credentials will be stored in Secrets Manager
      GenerateSecretString:
        SecretStringTemplate: '{"username": "admin"}'
        # SecretStringTemplate: '{"username": !Ref DBUsername}'
        GenerateStringKey: "password"
        PasswordLength: 16
        ExcludeCharacters: '"@/\\'

  MyDBSecurityGroup:
    Type: AWS::RDS::DBSecurityGroup
    Properties:
      GroupDescription: Allow inbound access from anywhere
      DBSecurityGroupIngress:
        - CIDRIP: 0.0.0.0/0
        
  MyDBInstance:
    Type: AWS::RDS::DBInstance
    DependsOn:
      - RDSSecret
      - MyDBSecurityGroup  
    Properties:
      Engine: mysql
      EngineVersion: '8.0.35'

      DBInstanceClass: db.t3.micro 
      DeletionProtection: false

      AllocatedStorage: 10

      DBInstanceIdentifier: MyDBInstance-2107-1

      DBName: temp_db
      MasterUsername: !Sub '{{resolve:secretsmanager:${RDSSecret}:SecretString:username}}'
      MasterUserPassword: !Sub '{{resolve:secretsmanager:${RDSSecret}:SecretString:password}}'

      PubliclyAccessible: true  # Allow access from anywhere
      
      DBSecurityGroups:
        - !Ref MyDBSecurityGroup  
        
  MySNSTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: MySNSNotificationTopic

  MySNSSubscription:
    Type: AWS::SNS::Subscription
    DependsOn: MySNSTopic
    Properties:
      Protocol: email
      # Endpoint: !Ref UserEmail
      Endpoint: "kapoor98.ak@gmail.com"
      TopicArn: !Ref MySNSTopic

  # This is working almost fine, I am getting an email when I create a AWS::SNS::Subscription but I am not getting an email confirmation link, I need to manually do it from the console
  # aws sns publish --topic-arn arn:aws:sns:us-east-1:851725512559:mystack3-MySNSTopic-pWbkYVQFx4jY --message 'Hello!'

  EmailSenderFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: emailSenderLambdaFunction
      Handler: lambda_function.lambda_handler
      # LabRole ARN
      Role: arn:aws:iam::851725512559:role/LabRole
      Code:
        S3Bucket: my-lambda-code-bucket-1
        S3Key: lambda_function.py.zip
      Runtime: python3.8
      Timeout: 30
      Environment:
        Variables:
          SNS_TOPIC_ARN: !Ref MySNSTopic
  # This is working perfectly and I am able to connect to the RDS Database
  # mydbinstance-2107.cjs42euouytr.us-east-1.rds.amazonaws.com - I got this from the output section of Cloud Formation and then I also got the Username and Password from the Secret Manager      

Outputs:
  RDSInstanceEndpoint:
    Description: Endpoint of the created RDS instance
    Value: !GetAtt MyDBInstance.Endpoint.Address

  RDSSecretARN:
    Description: ARN for the RDS Secret
    Value: !GetAtt RDSSecret.Id